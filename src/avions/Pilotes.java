/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package avions;

import java.sql.SQLException;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.JOptionPane;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;

/**
 *
 * @author Moussa
 */
public class Pilotes extends javax.swing.JFrame {

    /**
     * Creates new form Mouvement
     */
    public Pilotes() {
        
        // <editor-fold defaultstate="collapsed" desc="Interface de la fenetre">
         initComponents();
         this.setTitle("Air Moussa");
         this.setLocationRelativeTo(null);
         this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         this.setSize(590,480);
         nomAdmin.setText("Administrateur ["+id.getNdc()+"]");
         nomAdmin.setHorizontalAlignment(SwingConstants.CENTER);
         nomAdmin.setForeground(new java.awt.Color(102, 0, 0));
         CO.getConnection();
         // </editor-fold>
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Groupe1 = new javax.swing.ButtonGroup();
        jScrollBar1 = new javax.swing.JScrollBar();
        jComboBox1 = new javax.swing.JComboBox();
        jRapport = new javax.swing.JButton();
        jAnnuler = new javax.swing.JButton();
        image = new javax.swing.JLabel();
        titre = new javax.swing.JLabel();
        avionRet = new javax.swing.JLabel();
        Séparateur = new javax.swing.JSeparator();
        Trait = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();
        CoPilotePanel = new javax.swing.JPanel();
        tNomCP = new javax.swing.JLabel();
        tPrenomCP = new javax.swing.JLabel();
        tNumeroL = new javax.swing.JLabel();
        nomCP = new javax.swing.JTextField();
        prenomCP = new javax.swing.JTextField();
        numeroL = new javax.swing.JTextField();
        Trait2 = new javax.swing.JLabel();
        titreCP = new javax.swing.JLabel();
        nomAdmin = new javax.swing.JLabel();
        Cadre2 = new javax.swing.JLabel();
        PilotePanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nomP = new javax.swing.JTextField();
        prenomP = new javax.swing.JTextField();
        numeroP = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRapport.setText("Continuer");
        jRapport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRapportActionPerformed(evt);
            }
        });
        getContentPane().add(jRapport, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 390, 100, 30));

        jAnnuler.setText("Retour");
        jAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAnnulerActionPerformed(evt);
            }
        });
        getContentPane().add(jAnnuler, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 390, 100, 30));

        image.setIcon(new javax.swing.ImageIcon("C:\\Users\\Moussa\\Pictures\\BTS SIO 2\\JAVA\\AVIONS\\logo-avion.png")); // NOI18N
        getContentPane().add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 70));

        titre.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titre.setText("Trip Report : Gestion des retards");
        getContentPane().add(titre, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 10, 420, 30));

        avionRet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        avionRet.setText("Ajouter un pilote et un co-pilote");
        getContentPane().add(avionRet, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 240, 20));
        getContentPane().add(Séparateur, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 630, -1));

        Trait.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(Trait, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 374, 240, -1));

        image2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Moussa\\Pictures\\BTS SIO 2\\JAVA\\AVIONS\\accueil.png")); // NOI18N
        getContentPane().add(image2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 260, 240));

        CoPilotePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CoPilotePanel.setLayout(null);

        tNomCP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tNomCP.setText("Nom du co-pilote :");
        CoPilotePanel.add(tNomCP);
        tNomCP.setBounds(20, 50, 120, 20);

        tPrenomCP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tPrenomCP.setText("Prenom du co-pilote :");
        CoPilotePanel.add(tPrenomCP);
        tPrenomCP.setBounds(20, 90, 150, 20);

        tNumeroL.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tNumeroL.setText("Numéro de licence :");
        CoPilotePanel.add(tNumeroL);
        tNumeroL.setBounds(20, 120, 140, 40);
        CoPilotePanel.add(nomCP);
        nomCP.setBounds(170, 50, 100, 20);
        CoPilotePanel.add(prenomCP);
        prenomCP.setBounds(170, 90, 100, 20);

        numeroL.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroLKeyTyped(evt);
            }
        });
        CoPilotePanel.add(numeroL);
        numeroL.setBounds(170, 130, 100, 20);

        Trait2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        CoPilotePanel.add(Trait2);
        Trait2.setBounds(0, 38, 290, 2);

        titreCP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        titreCP.setText("Ajouter un nouveau co-pilote ");
        CoPilotePanel.add(titreCP);
        titreCP.setBounds(60, 10, 190, 15);

        getContentPane().add(CoPilotePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, 290, 170));

        nomAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(nomAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 180, 20));

        Cadre2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(Cadre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 240, 340));

        PilotePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PilotePanel.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Nom du pilote :");
        PilotePanel.add(jLabel9);
        jLabel9.setBounds(20, 50, 120, 20);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Prenom du pilote :");
        PilotePanel.add(jLabel10);
        jLabel10.setBounds(20, 90, 130, 20);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Numéro du permis :");
        PilotePanel.add(jLabel11);
        jLabel11.setBounds(20, 120, 140, 40);
        PilotePanel.add(nomP);
        nomP.setBounds(160, 50, 100, 20);
        PilotePanel.add(prenomP);
        prenomP.setBounds(160, 90, 100, 20);

        numeroP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numeroPActionPerformed(evt);
            }
        });
        numeroP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                numeroPKeyTyped(evt);
            }
        });
        PilotePanel.add(numeroP);
        numeroP.setBounds(160, 130, 100, 20);

        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PilotePanel.add(jLabel12);
        jLabel12.setBounds(0, 38, 290, 2);

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel13.setText("Ajouter un nouveau pilote ");
        PilotePanel.add(jLabel13);
        jLabel13.setBounds(60, 10, 190, 15);

        getContentPane().add(PilotePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 290, 160));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAnnulerActionPerformed
                   this.dispose();
                   new Accueil().setVisible(true);
    }//GEN-LAST:event_jAnnulerActionPerformed

    private void jRapportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRapportActionPerformed
               
               // <editor-fold defaultstate="collapsed" desc="Contrôles de saisis">
                // gestion de l'insert into 
                String piloteOK = "Oui";
                String copiloteOK = "Oui";
                String numeropiloteOK = "Oui";
                String numerocopiloteOK = "Oui";
                String identitepiloteOK = "Oui";
                String identitecopiloteOK = "Oui";
        if (nomP.getText().isEmpty() ||
                prenomP.getText().isEmpty() ||
                numeroP.getText().isEmpty() ||
                nomCP.getText().isEmpty() ||
                prenomCP.getText().isEmpty() ||
                numeroL.getText().isEmpty())  {
            JOptionPane.showMessageDialog(null, "Les informations sont incomplètes", "Petit problème !", JOptionPane.ERROR_MESSAGE);
            }
            else {
                    if (numeroP.getText().equals(numeroL.getText())) {
                   JOptionPane.showMessageDialog(null, "Le numéro de licence ne peut pas être le même que le numéro de permis", "Petit problème !", JOptionPane.ERROR_MESSAGE);
                   numeropiloteOK = "Non";
                   numerocopiloteOK = "Non";
               }
                    else {
                        numeropiloteOK = "Oui";
                        numerocopiloteOK = "Oui";
                    }
                    if (nomP.getText().equals(nomCP.getText()) && prenomP.getText().equals(prenomCP.getText())) {
                 JOptionPane.showMessageDialog(null, "Le pilote et le co-pilote ont la même identité !", "Petit problème !", JOptionPane.ERROR_MESSAGE);
                 identitepiloteOK = "Non";
                 identitecopiloteOK = "Non";
                   }
                    else {
                        identitepiloteOK = "Oui";
                        identitecopiloteOK = "Oui";
                    }
                    
                    // infos pilote
                String NomP = nomP.getText();
                String PrenomP = prenomP.getText();
                String NumeroP = numeroP.getText();
                // infos co-pilote
                String NomCP = nomCP.getText();
                String PrenomCP = prenomCP.getText();
                String NumeroL = numeroL.getText();
                // récupération des infos des pilotes dans la bdd
                String nomPiloteBDD = "";
                String nomPiloteExist = "Non";
                String prenomPiloteBDD = "";
                String prenomPiloteExist = "Non";
                String numeroPiloteBDD = "";
                String numeroPiloteExist = "Non";
                // récupération des infos des co-pilotes dans la bdd
                String nomCoPiloteBDD = "";
                String nomCoPiloteExist = "Non";
                String prenomCoPiloteBDD = "";
                String prenomCoPiloteExist = "Non";
                String numeroCoPiloteBDD = "";
                String numeroCoPiloteExist = "Non";
                
                // <editor-fold defaultstate="collapsed" desc="Récupère les identités des pilotes et co-pilotes"> 
   try {

Statement state = CO.com.createStatement();
ResultSet resultP = state.executeQuery("SELECT nomPilote, prenomPilote, numeroPermis FROM pilote");
Statement state2 = CO.com.createStatement();
ResultSet resultCP = state2.executeQuery("SELECT nomCoPilote, prenomCoPilote, numeroLicence FROM copilote");
while(resultP.next()){
    nomPiloteBDD = (resultP.getString(1));
    prenomPiloteBDD = (resultP.getString(2));
    numeroPiloteBDD = (resultP.getString(3));
    if (nomPiloteBDD.equals(NomP)) {
                    nomPiloteExist = "Oui";
                }
    if (prenomPiloteBDD.equals(PrenomP)) {
                    prenomPiloteExist = "Oui";
                }
    if (numeroPiloteBDD.equals(NumeroP)) {
                    numeroPiloteExist = "Oui";
                }
}
while(resultCP.next()){
    nomCoPiloteBDD = (resultCP.getString(1));
    prenomCoPiloteBDD = (resultCP.getString(2));
    numeroCoPiloteBDD = (resultCP.getString(3));
    if (nomCoPiloteBDD.equals(NomCP)) {
                    nomCoPiloteExist = "Oui";
                }
    if (prenomCoPiloteBDD.equals(PrenomCP)) {
                    prenomCoPiloteExist = "Oui";
                }
    if (numeroCoPiloteBDD.equals(NumeroL)) {
                    numeroCoPiloteExist = "Oui";
                }
}
resultP.close();
state.close();
resultCP.close();
state2.close();
   }
   catch (Exception e){
       e.printStackTrace();
   }
    // </editor-fold>
   
   if (nomPiloteExist == "Oui" && prenomPiloteExist == "Oui") {
       JOptionPane.showMessageDialog(null, "Ce pilote existe déjà dans la base de données. Vous ne pouvez pas l'ajouter.", "Petit problème !", JOptionPane.ERROR_MESSAGE);
       piloteOK = "Non";
   }
   else {
       piloteOK = "Oui";
   }
   if (nomCoPiloteExist == "Oui" && prenomCoPiloteExist == "Oui") {
       JOptionPane.showMessageDialog(null, "Ce co-pilote existe déjà dans la base de données. Vous ne pouvez pas l'ajouter.", "Petit problème !", JOptionPane.ERROR_MESSAGE);
       copiloteOK = "Non";
   }
   else {
       copiloteOK = "Oui";
   }
   if (numeroPiloteExist == "Oui") {
       JOptionPane.showMessageDialog(null, "Ce numéro de permis existe déjà dans la base de données. Vous ne pouvez pas l'ajouter.", "Petit problème !", JOptionPane.ERROR_MESSAGE);
       numeropiloteOK = "Non";
   }
   else {
       numeropiloteOK = "Oui";
   }
   if (numeroCoPiloteExist == "Oui") {
       JOptionPane.showMessageDialog(null, "Ce numéro de licence existe déjà dans la base de données. Vous ne pouvez pas l'ajouter.", "Petit problème !", JOptionPane.ERROR_MESSAGE);
       numerocopiloteOK = "Non";
   }
   else {
       numerocopiloteOK = "Oui";
   }
   
         if (piloteOK == "Oui" && copiloteOK == "Oui" && numeropiloteOK == "Oui" && numerocopiloteOK == "Oui" && identitepiloteOK == "Oui" && identitecopiloteOK == "Oui") {
            try {
                String retard = "0";
                String avertissement = "0";
                PreparedStatement pilote =CO.com.prepareStatement("INSERT INTO pilote (nomPilote, prenomPilote, numeroPermis, retard, avertissement)"
                     + " VALUES(('"+NomP+"'), ('"+PrenomP+"'), UPPER('"+NumeroP+"'), ('"+retard+"'), ('"+avertissement+"'))");
                PreparedStatement copilote =CO.com.prepareStatement("INSERT INTO copilote (nomCoPilote, prenomCoPilote, numeroLicence)"
                     + " VALUES(('"+NomCP+"'), ('"+PrenomCP+"'), UPPER('"+NumeroL+"'))");
                pilote.executeUpdate();
                pilote.close();
                copilote.executeUpdate();
                copilote.close();
                            }
                    catch (SQLException e) {
                    e.printStackTrace();
                            }
            JOptionPane.showMessageDialog(null, "Le pilote et le co-pilote ont bien été ajouter à la base de données.", "Pilotes ajoutés !", JOptionPane.INFORMATION_MESSAGE);
            new Accueil().setVisible(true);
            this.dispose();
            }
                }
         // </editor-fold>
        
    }//GEN-LAST:event_jRapportActionPerformed

    private void numeroPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numeroPActionPerformed

    }//GEN-LAST:event_numeroPActionPerformed

    private void numeroPKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroPKeyTyped
       if (numeroP.getText().length() >= 5 ) {// limit textfield to 5 characters
           evt.consume();
    }  
    }//GEN-LAST:event_numeroPKeyTyped

    private void numeroLKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_numeroLKeyTyped
       if (numeroL.getText().length() >= 10 ) {// limit textfield to 10 characters
           evt.consume();
    }  
    }//GEN-LAST:event_numeroLKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pilotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pilotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pilotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pilotes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pilotes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Cadre2;
    private javax.swing.JPanel CoPilotePanel;
    private javax.swing.ButtonGroup Groupe1;
    private javax.swing.JPanel PilotePanel;
    private javax.swing.JSeparator Séparateur;
    private javax.swing.JLabel Trait;
    private javax.swing.JLabel Trait2;
    private javax.swing.JLabel avionRet;
    private javax.swing.JLabel image;
    private javax.swing.JLabel image2;
    private javax.swing.JButton jAnnuler;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jRapport;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel nomAdmin;
    private javax.swing.JTextField nomCP;
    private javax.swing.JTextField nomP;
    private javax.swing.JTextField numeroL;
    private javax.swing.JTextField numeroP;
    private javax.swing.JTextField prenomCP;
    private javax.swing.JTextField prenomP;
    private javax.swing.JLabel tNomCP;
    private javax.swing.JLabel tNumeroL;
    private javax.swing.JLabel tPrenomCP;
    private javax.swing.JLabel titre;
    private javax.swing.JLabel titreCP;
    // End of variables declaration//GEN-END:variables
}
