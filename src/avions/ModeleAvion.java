/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package avions;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.SwingConstants;
import javax.swing.JOptionPane;

/**
 *
 * @author Moussa
 */
public class ModeleAvion extends javax.swing.JFrame {

    /**
     * Creates new form Mouvement
     */
    public ModeleAvion() {
        
        // <editor-fold defaultstate="collapsed" desc="Interface de la fenetre">
         initComponents();
         this.setTitle("Gestion des pilotes et des co-pilotes");
         this.setLocationRelativeTo(null);
         this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
         this.setSize(590,485);
         nomAdmin.setText("Administrateur ["+id.getNdc()+"]");
         nomAdmin.setHorizontalAlignment(SwingConstants.CENTER);
         nomAdmin.setForeground(new java.awt.Color(102, 0, 0));
         NewPanel.setVisible(false);
         OldPanel.setVisible(false);
         // </editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Récupère les identités des pilotes et co-pilotes"> 
   try {

Statement state1 = CO.com.createStatement();
ResultSet resultP = state1.executeQuery("SELECT DISTINCT nomPilote FROM pilote");
Statement state2 = CO.com.createStatement();
ResultSet resultCP = state2.executeQuery("SELECT DISTINCT nomCoPilote FROM copilote");
while(resultP.next()){
    NomP.addItem(resultP.getString(1));
}
while(resultCP.next()){
    NomCP.addItem(resultCP.getString(1));
    
}
resultP.close();
state1.close();
resultCP.close();
state2.close();
   }
   catch (Exception e){
       e.printStackTrace();
   }
    // </editor-fold> 
   
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Groupe1 = new javax.swing.ButtonGroup();
        jScrollBar1 = new javax.swing.JScrollBar();
        jComboBox1 = new javax.swing.JComboBox();
        jRapport = new javax.swing.JButton();
        jAnnuler = new javax.swing.JButton();
        image = new javax.swing.JLabel();
        titre = new javax.swing.JLabel();
        avionRet = new javax.swing.JLabel();
        Séparateur = new javax.swing.JSeparator();
        Trait = new javax.swing.JLabel();
        image2 = new javax.swing.JLabel();
        tPilote = new javax.swing.JLabel();
        Ancien = new javax.swing.JRadioButton();
        Nouveau = new javax.swing.JRadioButton();
        PilotePanel = new javax.swing.JPanel();
        tNomP = new javax.swing.JLabel();
        tPrenomP = new javax.swing.JLabel();
        Trait2 = new javax.swing.JLabel();
        TitreAjout = new javax.swing.JLabel();
        tNomCP = new javax.swing.JLabel();
        tPrenomCP = new javax.swing.JLabel();
        NomP = new javax.swing.JComboBox();
        PrenomP = new javax.swing.JComboBox();
        NomCP = new javax.swing.JComboBox();
        PrenomCP = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        Cadre = new javax.swing.JLabel();
        nomAdmin = new javax.swing.JLabel();
        Trait1 = new javax.swing.JLabel();
        Cadre2 = new javax.swing.JLabel();
        NewPanel = new javax.swing.JPanel();
        tModele = new javax.swing.JLabel();
        NewModele = new javax.swing.JTextField();
        OldPanel = new javax.swing.JPanel();
        tOldModele = new javax.swing.JLabel();
        OldModele = new javax.swing.JComboBox();
        IDP = new javax.swing.JLabel();
        IDCP = new javax.swing.JLabel();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jRapport.setText("Continuer");
        jRapport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRapportActionPerformed(evt);
            }
        });
        getContentPane().add(jRapport, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 400, 100, 30));

        jAnnuler.setText("Retour");
        jAnnuler.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAnnulerActionPerformed(evt);
            }
        });
        getContentPane().add(jAnnuler, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 400, 100, 30));

        image.setIcon(new javax.swing.ImageIcon("C:\\Users\\Moussa\\Pictures\\BTS SIO 2\\JAVA\\AVIONS\\logo-avion.png")); // NOI18N
        getContentPane().add(image, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, 70));

        titre.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        titre.setText("Trip Report : Gestion des retards");
        getContentPane().add(titre, new org.netbeans.lib.awtextra.AbsoluteConstraints(109, 10, 420, 30));

        avionRet.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        avionRet.setText("Ajouter un pilote et un co-pilote à un modèle d'avion");
        getContentPane().add(avionRet, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 50, 380, 20));
        getContentPane().add(Séparateur, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 630, -1));

        Trait.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(Trait, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 384, 240, -1));

        image2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Moussa\\Pictures\\BTS SIO 2\\JAVA\\AVIONS\\accueil.png")); // NOI18N
        getContentPane().add(image2, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 110, 260, 250));

        tPilote.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tPilote.setText("Ancien ou nouveau modèle ?");
        getContentPane().add(tPilote, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 280, 220, 20));

        Groupe1.add(Ancien);
        Ancien.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Ancien.setText("Ancien");
        Ancien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AncienActionPerformed(evt);
            }
        });
        getContentPane().add(Ancien, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 320, 90, -1));

        Groupe1.add(Nouveau);
        Nouveau.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        Nouveau.setText("Nouveau");
        Nouveau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NouveauActionPerformed(evt);
            }
        });
        getContentPane().add(Nouveau, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, 90, 20));

        PilotePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PilotePanel.setLayout(null);

        tNomP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tNomP.setText("Nom du pilote :");
        PilotePanel.add(tNomP);
        tNomP.setBounds(20, 50, 120, 20);

        tPrenomP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tPrenomP.setText("Prenom du pilote :");
        PilotePanel.add(tPrenomP);
        tPrenomP.setBounds(20, 80, 130, 20);

        Trait2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        PilotePanel.add(Trait2);
        Trait2.setBounds(0, 38, 290, 2);

        TitreAjout.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        TitreAjout.setText("Pilotes et Co-Pilotes");
        PilotePanel.add(TitreAjout);
        TitreAjout.setBounds(80, 10, 130, 20);

        tNomCP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tNomCP.setText("Nom du co-pilote :");
        PilotePanel.add(tNomCP);
        tNomCP.setBounds(20, 110, 130, 20);

        tPrenomCP.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tPrenomCP.setText("Prenom du co-pilote :");
        PilotePanel.add(tPrenomCP);
        tPrenomCP.setBounds(20, 140, 150, 20);

        NomP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomPActionPerformed(evt);
            }
        });
        PilotePanel.add(NomP);
        NomP.setBounds(170, 50, 90, 20);
        PilotePanel.add(PrenomP);
        PrenomP.setBounds(170, 80, 90, 20);

        NomCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NomCPActionPerformed(evt);
            }
        });
        PilotePanel.add(NomCP);
        NomCP.setBounds(170, 110, 90, 20);
        PilotePanel.add(PrenomCP);
        PrenomCP.setBounds(170, 140, 90, 20);

        getContentPane().add(PilotePanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 290, 170));

        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 310, -1, 40));

        Cadre.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(Cadre, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 290, 80));

        nomAdmin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(nomAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 100, 180, 20));

        Trait1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(Trait1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 308, 290, -1));

        Cadre2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(Cadre2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 240, 350));

        NewPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        NewPanel.setLayout(null);

        tModele.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tModele.setText("Nouveau modèle :");
        NewPanel.add(tModele);
        tModele.setBounds(20, 10, 130, 20);
        NewPanel.add(NewModele);
        NewModele.setBounds(10, 40, 120, 30);

        getContentPane().add(NewPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 140, 80));

        OldPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        OldPanel.setLayout(null);

        tOldModele.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tOldModele.setText("Modèles existants :");
        OldPanel.add(tOldModele);
        tOldModele.setBounds(10, 10, 130, 20);

        OldModele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OldModeleActionPerformed(evt);
            }
        });
        OldPanel.add(OldModele);
        OldModele.setBounds(10, 40, 120, 30);

        getContentPane().add(OldPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 140, 80));
        getContentPane().add(IDP, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 460, 40, 20));
        getContentPane().add(IDCP, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 460, 30, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jAnnulerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAnnulerActionPerformed
                   this.dispose();
                   new Accueil().setVisible(true);
    }//GEN-LAST:event_jAnnulerActionPerformed

    private void jRapportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRapportActionPerformed
          
           // <editor-fold defaultstate="collapsed" desc="Initialisation des noms/prenoms"> 
          String NomPilote = NomP.getSelectedItem().toString();
          String PrenomPilote = PrenomP.getSelectedItem().toString();
          String NomCoPilote = NomCP.getSelectedItem().toString();
          String PrenomCoPilote = PrenomCP.getSelectedItem().toString();
          
          
          // </editor-fold>
          
           // <editor-fold defaultstate="collapsed" desc="Récupère les ID associés aux pilotes et co-pilotes"> 
   try {

Statement state1 = CO.com.createStatement();
ResultSet resultP = state1.executeQuery("SELECT idPilote FROM pilote WHERE nomPilote='"+NomPilote+"' AND prenomPilote='"+PrenomPilote+"'");
Statement state2 = CO.com.createStatement();
ResultSet resultCP = state2.executeQuery("SELECT idCoPilote FROM copilote WHERE nomCoPilote='"+NomCoPilote+"' AND prenomCoPilote='"+PrenomCoPilote+"'");
while(resultP.next()){
    IDP.setText(resultP.getString(1));
}
while(resultCP.next()){
    IDCP.setText(resultCP.getString(1));
    
}
resultP.close();
state1.close();
resultCP.close();
state2.close();
   }
   catch (Exception e){
       e.printStackTrace();
   }
    // </editor-fold> 
        
           // <editor-fold defaultstate="collapsed" desc="Ajouter les pilotes et co-pilotes au modèle"> 
        String IdP = IDP.getText();
        String IdCP = IDCP.getText();
        if (Ancien.isSelected() || Nouveau.isSelected()) {
                if (Nouveau.isSelected()) {
                    if (NewModele.getText().isEmpty()) {
                       JOptionPane.showMessageDialog(null, "Vous n'avez saisis aucun modèle", "Petit problème !", JOptionPane.ERROR_MESSAGE);
                    }
                    else {
                        String Modele = NewModele.getText();
                        // <editor-fold defaultstate="collapsed" desc="Vérifie si l'avion existe déjà dans la BDD"> 
                        // récupération des infos avions
                String nomAvionBDD = "";
                String nomAvionExist = "Non";
   try {

Statement state = CO.com.createStatement();
ResultSet resultA = state.executeQuery("SELECT DISTINCT modele FROM avion");
while(resultA.next()){
    nomAvionBDD = (resultA.getString(1));
    if (nomAvionBDD.equals(Modele)) {
                    nomAvionExist = "Oui";
                    System.out.println("Il existe déjà");
                }

}
resultA.close();
state.close();

   }
   catch (Exception e){
       e.printStackTrace();
   }
    // </editor-fold>
   
                        if (nomAvionExist == "Oui") {
                            JOptionPane.showMessageDialog(null, "Le modèle d'avion ["+Modele+"] existe déjà dans la base de données.", "Petit problème !", JOptionPane.ERROR_MESSAGE);
                        }
                        else {
             try {        
                PreparedStatement pilote =CO.com.prepareStatement("INSERT INTO avion (modele, idPilote, idCoPilote)"
                     + " VALUES(('"+Modele+"'), ('"+IdP+"'), ('"+IdCP+"'))");
                pilote.executeUpdate();
                pilote.close();
                
                            }
                    catch (SQLException e) {
                    e.printStackTrace();
                            }   
            JOptionPane.showMessageDialog(null, "Le modèle "+Modele+" a été ajouter à la base de données", "Modèle ajouter !", JOptionPane.INFORMATION_MESSAGE);    
            new Accueil().setVisible(true);
            this.dispose();
                }
                    
                }
                }
                if (Ancien.isSelected()) {
               
                    String ModeleBDD = OldModele.getSelectedItem().toString();
                    
                    // <editor-fold defaultstate="collapsed" desc="Vérifie si le pilote et le co pilote sont deja associé au modele"> 
                        // récupération des infos pilotes / copilotes
                String idPiloteBDD = "";
                String idCoPiloteBDD = "";
                String idPiloteExist = "Non";
                String idCoPiloteExist = "Non";
   try {

Statement state2 = CO.com.createStatement();
ResultSet resultP = state2.executeQuery("SELECT idPilote FROM avion WHERE modele='"+ModeleBDD+"'");
Statement state3 = CO.com.createStatement();
ResultSet resultCP = state3.executeQuery("SELECT idCoPilote FROM avion WHERE modele='"+ModeleBDD+"'");
while(resultP.next()){
    idPiloteBDD = (resultP.getString(1));
    if (idPiloteBDD.equals(IdP)) {
                    idPiloteExist = "Oui";
                    System.out.println("Cette ID pilote existe déjà");
                }

}
while(resultCP.next()){
    idCoPiloteBDD = (resultCP.getString(1));
    if (idCoPiloteBDD.equals(IdCP)) {
                    idCoPiloteExist = "Oui";
                    System.out.println("Cette ID co-pilote existe déjà");
                }

}
resultP.close();
state2.close();
resultCP.close();
state3.close();
   }
   catch (Exception e){
       e.printStackTrace();
   }
    // </editor-fold>
   
                 if (idPiloteExist == "Oui") {
                      JOptionPane.showMessageDialog(null, "Le Pilote ["+NomPilote+" "+PrenomPilote+"] est déjà associé au modèle "+ModeleBDD+".", "Petit problème !", JOptionPane.ERROR_MESSAGE);
                 }
                 if (idCoPiloteExist == "Oui") {
                      JOptionPane.showMessageDialog(null, "Le Co-Pilote ["+NomCoPilote+" "+PrenomCoPilote+"] est déjà associé au modèle "+ModeleBDD+".", "Petit problème !", JOptionPane.ERROR_MESSAGE);
                 }
                 if (idPiloteExist == "Non" && idCoPiloteExist == "Non") {
                    try {
                PreparedStatement pilote =CO.com.prepareStatement("INSERT INTO avion (modele, idPilote, idCoPilote)"
                     + " VALUES(('"+ModeleBDD+"'), ('"+IdP+"'), ('"+IdCP+"'))");
                pilote.executeUpdate();
                pilote.close();
                
                            }
                    catch (SQLException e) {
                    e.printStackTrace();
                            }   
            JOptionPane.showMessageDialog(null, "Le modèle "+ModeleBDD+" a été ajouter à la base de données", "Modèle ajouter !", JOptionPane.INFORMATION_MESSAGE);   
            new Accueil().setVisible(true);
            this.dispose();
                }
                }
            }
            else {
               JOptionPane.showMessageDialog(null, "Vous ne pouvez pas continuer sans avoir saisis un type de modèle pour le pilote", "Petit problème !", JOptionPane.ERROR_MESSAGE);
            }
        // </editor-fold>
        
    }//GEN-LAST:event_jRapportActionPerformed

    private void AncienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AncienActionPerformed
        
        // <editor-fold defaultstate="collapsed" desc="Verification des Panel"> 
        OldPanel.setVisible(true);
        NewPanel.setVisible(false);
        OldModele.removeAllItems();
        // </editor-fold>
        
        // <editor-fold defaultstate="collapsed" desc="Récupère les identités des pilotes et co-pilotes"> 
   try {

Statement state1 = CO.com.createStatement();
ResultSet resultP = state1.executeQuery("SELECT DISTINCT modele FROM avion");
while(resultP.next()){
    OldModele.addItem(resultP.getString(1));
}
resultP.close();
state1.close();
   }
   catch (Exception e){
       e.printStackTrace();
   }
    // </editor-fold> 
        
        
    }//GEN-LAST:event_AncienActionPerformed

    private void NouveauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NouveauActionPerformed
        NewPanel.setVisible(true);
        OldPanel.setVisible(false);
    }//GEN-LAST:event_NouveauActionPerformed

    private void NomPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomPActionPerformed
         
        // <editor-fold defaultstate="collapsed" desc="Récupération des prénoms des pilotes">
     
       PrenomP.removeAllItems();
        try {        
String Nom=NomP.getSelectedItem().toString();
PreparedStatement pre3=CO.com.prepareStatement("SELECT prenomPilote FROM pilote WHERE nomPilote='"+Nom+"'");
ResultSet prenom_r3=pre3.executeQuery();
while(prenom_r3.next()){
    PrenomP.addItem(prenom_r3.getString(1));
    
}
} catch (SQLException e) {
e.printStackTrace();
}
// </editor-fold>
        
    }//GEN-LAST:event_NomPActionPerformed

    private void NomCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NomCPActionPerformed
        
        // <editor-fold defaultstate="collapsed" desc="Récupération des prénoms des co-pilotes">
     
       PrenomCP.removeAllItems();
        try {        
String NomCoP=NomCP.getSelectedItem().toString();
PreparedStatement pre4=CO.com.prepareStatement("SELECT prenomCoPilote FROM copilote WHERE nomCoPilote='"+NomCoP+"'");
ResultSet prenom_r4=pre4.executeQuery();
while(prenom_r4.next()){
    PrenomCP.addItem(prenom_r4.getString(1));
    
}
} catch (SQLException e) {
e.printStackTrace();
}
// </editor-fold>
        
    }//GEN-LAST:event_NomCPActionPerformed

    private void OldModeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OldModeleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OldModeleActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModeleAvion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModeleAvion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModeleAvion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModeleAvion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModeleAvion().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Ancien;
    private javax.swing.JLabel Cadre;
    private javax.swing.JLabel Cadre2;
    private javax.swing.ButtonGroup Groupe1;
    private javax.swing.JLabel IDCP;
    private javax.swing.JLabel IDP;
    private javax.swing.JTextField NewModele;
    private javax.swing.JPanel NewPanel;
    private javax.swing.JComboBox NomCP;
    private javax.swing.JComboBox NomP;
    private javax.swing.JRadioButton Nouveau;
    private javax.swing.JComboBox OldModele;
    private javax.swing.JPanel OldPanel;
    private javax.swing.JPanel PilotePanel;
    private javax.swing.JComboBox PrenomCP;
    private javax.swing.JComboBox PrenomP;
    private javax.swing.JSeparator Séparateur;
    private javax.swing.JLabel TitreAjout;
    private javax.swing.JLabel Trait;
    private javax.swing.JLabel Trait1;
    private javax.swing.JLabel Trait2;
    private javax.swing.JLabel avionRet;
    private javax.swing.JLabel image;
    private javax.swing.JLabel image2;
    private javax.swing.JButton jAnnuler;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton jRapport;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JLabel nomAdmin;
    private javax.swing.JLabel tModele;
    private javax.swing.JLabel tNomCP;
    private javax.swing.JLabel tNomP;
    private javax.swing.JLabel tOldModele;
    private javax.swing.JLabel tPilote;
    private javax.swing.JLabel tPrenomCP;
    private javax.swing.JLabel tPrenomP;
    private javax.swing.JLabel titre;
    // End of variables declaration//GEN-END:variables
}
